//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BVAguilar_ThtecEntities : DbContext
    {
        public BVAguilar_ThtecEntities()
            : base("name=BVAguilar_ThtecEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Persona> Personas { get; set; }
    
        public virtual int AddPersona(string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, string correo, string contraseña, Nullable<System.DateTime> fechaDeNacimiento, Nullable<System.DateTime> fechaDeAlta)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("FechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("FechaDeNacimiento", typeof(System.DateTime));
    
            var fechaDeAltaParameter = fechaDeAlta.HasValue ?
                new ObjectParameter("FechaDeAlta", fechaDeAlta) :
                new ObjectParameter("FechaDeAlta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPersona", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, correoParameter, contraseñaParameter, fechaDeNacimientoParameter, fechaDeAltaParameter);
        }
    
        public virtual int DeletePersona(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePersona", idPersonaParameter);
        }
    
        public virtual ObjectResult<GetAllPersona_Result> GetAllPersona()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPersona_Result>("GetAllPersona");
        }
    
        public virtual ObjectResult<GetByIdPersona_Result> GetByIdPersona(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdPersona_Result>("GetByIdPersona", idPersonaParameter);
        }
    
        public virtual int UpdatePersona(Nullable<int> idPersona, string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, string correo, string contraseña, Nullable<System.DateTime> fechaDeNacimiento, Nullable<System.DateTime> fechaDeAlta)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("FechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("FechaDeNacimiento", typeof(System.DateTime));
    
            var fechaDeAltaParameter = fechaDeAlta.HasValue ?
                new ObjectParameter("FechaDeAlta", fechaDeAlta) :
                new ObjectParameter("FechaDeAlta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePersona", idPersonaParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, correoParameter, contraseñaParameter, fechaDeNacimientoParameter, fechaDeAltaParameter);
        }
    }
}
